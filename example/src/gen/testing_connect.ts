// @generated by protoc-gen-connect-es v0.11.0 with parameter "target=ts,import_extension=none"
// @generated from file testing.proto (package testing, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { DetailGetRequest, DetailGetResponse, EchoRequest, EchoResponse, MetadataGetResponse, SetRequest, StatusGetRequest, StatusGetResponse } from "./testing_pb";
import { Empty, MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service testing.Status
 */
export const Status = {
  typeName: "testing.Status",
  methods: {
    /**
     * @generated from rpc testing.Status.Get
     */
    get: {
      name: "Get",
      I: StatusGetRequest,
      O: StatusGetResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from service testing.Detail
 */
export const Detail = {
  typeName: "testing.Detail",
  methods: {
    /**
     * @generated from rpc testing.Detail.Get
     */
    get: {
      name: "Get",
      I: DetailGetRequest,
      O: DetailGetResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from service testing.Metadata
 */
export const Metadata = {
  typeName: "testing.Metadata",
  methods: {
    /**
     * @generated from rpc testing.Metadata.Get
     */
    get: {
      name: "Get",
      I: Empty,
      O: MetadataGetResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from service testing.ChangeHealth
 */
export const ChangeHealth = {
  typeName: "testing.ChangeHealth",
  methods: {
    /**
     * @generated from rpc testing.ChangeHealth.Set
     */
    set: {
      name: "Set",
      I: SetRequest,
      O: Empty,
      kind: MethodKind.Unary,
    },
  }
} as const;

/**
 * @generated from service testing.Interceptor
 */
export const Interceptor = {
  typeName: "testing.Interceptor",
  methods: {
    /**
     * @generated from rpc testing.Interceptor.Echo
     */
    echo: {
      name: "Echo",
      I: EchoRequest,
      O: EchoResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

